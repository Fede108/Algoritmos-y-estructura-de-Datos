#include <cstdlib>
#include <iostream>
#include <sstream>
#include <fstream>
#include <string>

using namespace std;

#include "../inc/Pila.h"
#include "../inc/Valor.h"
#include "../inc/Cola.h"

#include <vector>

class Json
{
private:
    Pila<char> p ;
    string comando;
    string nombre_archivo;
    vector<string> expresion_json; 
    Valor valor;
public:
    Json(string nombre_archivo) : nombre_archivo(nombre_archivo) {} ;
    void leer_archivo();
    void lector_linea(int indice, string comando);
    bool evaluar_llave(char c);
    void analizador_archivo();
};


void Json ::  leer_archivo(){
    ifstream archivo(nombre_archivo);
    bool llave_correcta = true;
    bool valor_correcto = true;
    bool modo_valor = false;
    bool modo_llave = true;
    bool incorrecta = false;

    if (archivo.is_open()) {
        char c;
        while(archivo.get(c) && ! incorrecta ){
            if(c=='{'){
                p.apilar('{');
            } 
            else if(!p.pilavacia()){
                    if (c == '\n' || c == ' ' || c == '\t' ){}
                    else if (modo_llave){ 
                        if (evaluar_llave(c))
                        {
                            modo_llave = false; 
                            llave_correcta = true;
                        }
                    }
                    else if( c == ':' &&  llave_correcta ){
                            comando += c;
                            modo_valor = true;     
                    }
                    else if(modo_valor){ 
                        valor.guardar(comando);
                        if(valor.evaluar_llave(c))
                        {
                            modo_valor = false; 
                        }
                    }  
                    else if (c == ',' && ! modo_valor )
                    {   
                            modo_llave = true;
                            comando += c;
                            cout<<comando<<endl;
                            comando = ""; 
                    }
                    else{
                    incorrecta = true;    
                    }
            }
            if(c=='}') { 
                p.desapilar();
            }      
        }
        archivo.close();
    } else {
    cerr << "No se pudo abrir el archivo." << endl;
    return ; 
    }
}

bool Json::evaluar_llave(char c ){
    comando += c;
    if (c == '"'  && p.tope() != '"' ){ 
        p.apilar(c);
        return false;
    }
    if (c == '"' && p.tope() == '"' ){ 
        p.desapilar();
        return true;
    }
    return false;
} 
  